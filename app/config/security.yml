# To get started with security, check out the documentation:
# http://symfony.com/doc/current/book/security.html
security:
    encoders:
        # Our user class and the algorithm we'll use to encode passwords
        # http://symfony.com/doc/current/book/security.html#encoding-the-user-s-password
        Myexp\Bundle\CmsBundle\Entity\User: bcrypt

    # http://symfony.com/doc/current/book/security.html#where-do-users-come-from-user-providers
    providers:
        database_users:
            entity: { class: MyexpCmsBundle:User, property: username }

    firewalls:
        # disables authentication for assets and the profiler, adapt it according to your needs
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            # this firewall applies to all URLs
            pattern: ^/
            
            # but the firewall does not require login on every page
            # denying access is done in access_control or in your controllers
            anonymous: true
            
            # activate different ways to authenticate

            # http_basic: ~
            # http://symfony.com/doc/current/book/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: ~
            # http://symfony.com/doc/current/cookbook/security/form_login_setup.html
            form_login:
                # The route name that the login form submits to
                check_path: user_check
                # The name of the route where the login form lives
                # When the user tries to access a protected page, they are redirected here
                login_path: user_login
                # Secure the login form against CSRF
                # Reference: http://symfony.com/doc/current/cookbook/security/csrf_in_login_form.html
                csrf_token_generator: security.csrf.token_manager
                default_target_path: /admin/
                target_path_parameter: _target_path
                
            logout:
                # The route name the user can go to in order to logout
                path: user_logout
                # The name of the route to redirect to after logging out
                target: homepage
                
            remember_me:
                secret: "%secret%"
                lifetime: 31536000
                path: /
                domain: ~    
                
    access_control:
        # this is a catch-all for the admin area
        # additional security lives in the controllers
        - { path: ^/admin, roles: ROLE_ADMIN }