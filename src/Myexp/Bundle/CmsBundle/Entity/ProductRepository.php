<?php

namespace Myexp\Bundle\CmsBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ProductRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductRepository extends EntityRepository {

    public function getProductCount($params = null) {

        $qb = $this->buildQuery($params);
        $qb->select($qb->expr()->count('p'));

        return $qb->getQuery()->getSingleScalarResult();
    }

    public function getProductsWithPagination($params = null, $order_by = array(), $offset = 0, $limit = 0) {

        $qb = $this->buildQuery($params);

        if ((isset($offset)) && (isset($limit))) {
            if ($limit > 0) {
                $qb->setFirstResult($offset);
                $qb->setMaxResults($limit);
            }
        }

        foreach ($order_by as $key => $value) {
            $qb->add('orderBy', $key . ' ' . $value);
        }

        $q = $qb->getQuery();

        return $q->getResult();
    }

    private function buildQuery($params) {

        $qb = $this->createQueryBuilder('p');

        if (isset($params['category'])) {
            $qb
                    ->andWhere('p.category = ?1')
                    ->setParameter(1, $params['category'])
            ;
        }
        if (isset($params['isActive'])) {
            $qb
                    ->andWhere('p.isActive = ?2')
                    ->setParameter(2, $params['isActive'])
            ;
        }

        return $qb;
    }

}
